{
  "schema_version": 2,
  "problem_slug": "FOLIO_dev_1",
  "problem_text": "If people perform in school talent shows often, then they attend and are very engaged with school events. People either perform in school talent shows often or are inactive and disinterested members of their community. If people chaperone high school dances, then they are not students who attend the school. All people who are inactive and disinterested members of their community chaperone high school dances. All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school. Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school.",
  "n_tests": 10,
  "n_solutions": 10,
  "predicates": "PerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.",
  "tests": [
    {
      "id": "tc_06e6b355",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a student who attends the school and wishes to further her academic careers, then Bonnie performs in school talent shows often.",
      "conclusions": "StudentWhoAttendsSchool(bonnie) ∧ WishToFurtherAcademics(bonnie) → PerformOften(bonnie) ::: FALSE"
    },
    {
      "id": "tc_eba2f16d",
      "questions": "Based on the above information, is the following statement true or false? Bonnie is a teenager who wishes to further her academic careers and educational opportunities.",
      "conclusions": "Teenager(bonnie) ∧ WishToFurtherAcademics(bonnie) ∧ WishToFurtherEducation(bonnie) ::: FALSE"
    },
    {
      "id": "tc_794706a6",
      "questions": "Based on the above information, is the following statement true or false? Bonnie is either a student who attends the school and performs in school talent shows often, or she is neither a student who attends the school nor performs in school talent shows often.",
      "conclusions": "(StudentWhoAttendsSchool(bonnie) ∧ PerformOften(bonnie)) ⊕ ¬(StudentWhoAttendsSchool(bonnie) ∨ PerformOften(bonnie)) ::: FALSE"
    },
    {
      "id": "tc_e8d697fa",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a young child, then Bonnie is either inactive or disinterested in her community.",
      "conclusions": "YoungChild(bonnie) → (InactiveCommunityMember(bonnie) ∨ DisinterestedCommunityMember(bonnie)) ::: FALSE"
    },
    {
      "id": "tc_e2f1705b",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a young child and wishes to further her academic careers, then Bonnie attends school events and is very engaged with school events.",
      "conclusions": "(YoungChild(bonnie) ∧ WishToFurtherAcademics(bonnie)) → (AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ::: FALSE"
    },
    {
      "id": "tc_41fce652",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a student who attends the school and wishes to further her educational opportunities, then Bonnie chaperones high school dances.",
      "conclusions": "StudentWhoAttendsSchool(bonnie) ∧ WishToFurtherEducation(bonnie) → ChaperoneDances(bonnie) ::: FALSE"
    },
    {
      "id": "tc_0f358b6c",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a young child, then Bonnie is either a person who performs in school talent shows often or a person who chaperones high school dances.",
      "conclusions": "PerformOften(bonnie) ⊕ ChaperoneDances(bonnie) ::: If Bonnie is a young child, then Bonnie is either a person who performs in school talent shows often or a person who chaperones high school dances. FALSE"
    },
    {
      "id": "tc_64a914f7",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a student who attends the school, then Bonnie is either a person who performs in school talent shows often or a person who is inactive and disinterested in their community.",
      "conclusions": "StudentWhoAttendsSchool(bonnie) → (PerformOften(bonnie) ∨ (InactiveCommunityMember(bonnie) ∧ DisinterestedCommunityMember(bonnie))) ::: FALSE"
    },
    {
      "id": "tc_50f91cdb",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a teenager who wishes to further her academic careers and educational opportunities, then Bonnie is either a student who attends the school or is inactive and disinterested in her community.",
      "conclusions": "Teenager(bonnie) ∧ WishToFurtherAcademics(bonnie) ∧ WishToFurtherEducation(bonnie) → (StudentWhoAttendsSchool(bonnie) ∨ (InactiveCommunityMember(bonnie) ∧ DisinterestedCommunityMember(bonnie))) ::: TRUE"
    },
    {
      "id": "tc_222b9574",
      "questions": "Based on the above information, is the following statement true or false? If Bonnie is a young child who wishes to further their academic careers and educational opportunities, then Bonnie performs in school talent shows often.",
      "conclusions": "PerformOften(bonnie) → (YoungChild(bonnie) ∧ WishToFurtherAcademics(bonnie) ∧ WishToFurtherEducation(bonnie)) ::: FALSE"
    }
  ],
  "candidate_solutions": [
    {
      "id": "sol_435d116d",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x (PerformOften(x) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x (PerformOften(x) ⊕ (InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ ¬(AttendSchoolEvents(bonnie) ∨ EngagedWithSchoolEvents(bonnie)) ∧ StudentWhoAttendsSchool(bonnie) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_9ff1880b",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x (PerformOften(x) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x (PerformOften(x) ⊕ (InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_c1683af3",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x (PerformOften(x) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x (PerformOften(x) ⊕ (InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬(AttendSchoolEvents(bonnie)) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_0720c33d",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x (PerformOften(x) → AttendSchoolEvents(x)) ::: If people perform in school talent shows often, then they attend school events.\n∀x (PerformOften(x) → EngagedWithSchoolEvents(x)) ::: If people perform in school talent shows often, then they are very engaged with school events.\n∀x (PerformOften(x) ⊕ (InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬AttendSchoolEvents(bonnie) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_92deb3ea",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x ((PerformOften(x)) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x ((PerformOften(x)) ⊕ ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x ((ChaperoneDances(x)) → ¬(StudentWhoAttendsSchool(x))) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x (((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x (((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x))) → StudentWhoAttendsSchool(x) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n((AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ ¬(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie))) ⊕ StudentWhoAttendsSchool(bonnie) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_88adb4c1",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x ((PerformOften(x)) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x ((PerformOften(x)) ⊕ ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x ((ChaperoneDances(x)) → ¬(StudentWhoAttendsSchool(x))) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x (((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x (((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x))) → StudentWhoAttendsSchool(x) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬AttendSchoolEvents(bonnie) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_fddc82db",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x (PerformOften(x) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x (PerformOften(x) ⊕ (InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬(AttendSchoolEvents(bonnie) ∨ EngagedWithSchoolEvents(bonnie)) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_caca07f5",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x ((PerformOften(x)) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x (PerformOften(x) ↔ ¬(InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x (ChaperoneDances(x) → ¬StudentWhoAttendsSchool(x)) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x ((YoungChild(x) ∨ Teenager(x)) ∧ (WishToFurtherAcademics(x) ∨ WishToFurtherEducation(x)) → StudentWhoAttendsSchool(x)) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬AttendSchoolEvents(bonnie) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_5233a148",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x ((PerformOften(x)) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x ((PerformOften(x)) ⊕ ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x ((ChaperoneDances(x)) → ¬(StudentWhoAttendsSchool(x))) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x (((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x (((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x))) → StudentWhoAttendsSchool(x) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ⊕ (¬(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ∧ ¬StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    },
    {
      "id": "sol_132d7286",
      "text": "# Predicates:\nPerformOften(x) ::: x performs in school talent shows often.\nAttendSchoolEvents(x) ::: x attends school events.\nEngagedWithSchoolEvents(x) ::: x is very engaged with school events.\nInactiveCommunityMember(x) ::: x is an inactive member of their community.\nDisinterestedCommunityMember(x) ::: x is a disinterested member of their community.\nChaperoneDances(x) ::: x chaperones high school dances.\nStudentWhoAttendsSchool(x) ::: x is a student who attends the school.\nYoungChild(x) ::: x is a young child.\nTeenager(x) ::: x is a teenager.\nWishToFurtherAcademics(x) ::: x wishes to further their academic careers.\nWishToFurtherEducation(x) ::: x wishes to further their educational opportunities.\nBonnie(x) ::: x is Bonnie.\n\n# Premises:\n∀x ((PerformOften(x)) → (AttendSchoolEvents(x) ∧ EngagedWithSchoolEvents(x))) ::: If people perform in school talent shows often, then they attend and are very engaged with school events.\n∀x ((PerformOften(x)) ⊕ ((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x)))) ::: People either perform in school talent shows often or are inactive and disinterested members of their community.\n∀x ((ChaperoneDances(x)) → ¬(StudentWhoAttendsSchool(x))) ::: If people chaperone high school dances, then they are not students who attend the school.\n∀x (((InactiveCommunityMember(x) ∧ DisinterestedCommunityMember(x))) → ChaperoneDances(x)) ::: All people who are inactive and disinterested members of their community chaperone high school dances.\n∀x (((YoungChild(x) ∨ Teenager(x)) ∧ WishToFurtherAcademics(x) ∧ WishToFurtherEducation(x))) → StudentWhoAttendsSchool(x) ::: All young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\n(AttendSchoolEvents(bonnie) ∧ EngagedWithSchoolEvents(bonnie)) ↔ ¬(StudentWhoAttendsSchool(bonnie)) ::: Bonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school."
    }
  ],
  "validation": {
    "id": "tc_733635f8",
    "questions": "Based on the above information, is the following statement true, false, or uncertain? Bonnie performs in school talent shows often.",
    "conclusions": "PerformOften(bonnie) ::: Bonnie performs in school talent shows often. unknown"
  }
}