{
  "run_dir": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129",
  "dataset": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/temp_dataset_for_FOLIO_dev_129.json",
  "solutions": [
    {
      "solution_name": "sol_027ffda0.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0001/post/solutions/sol_027ffda0.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p \u2200w (HasWedding(p, w) \u2192 HasChild(p))\n\u2200p \u2200w (TravelsToParis(p, w) \u2192 HasWedding(p, w))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p, w)))\n\u2203w \u2203p (OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john, john_wedding) \u2227 \u00acHasWedding(john, john_wedding)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p, w)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p \u2200w (HasWedding(p, w) \u2192 HasChild(p))\n\u2200p \u2200w (TravelsToParis(p, w) \u2192 HasWedding(p, w))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p, w)))\n\u2203w \u2203p (OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john, john_wedding) \u2227 \u00acHasWedding(john, john_wedding)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p, w)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p \u2200w (HasWedding(p, w) \u2192 HasChild(p))\n\u2200p \u2200w (TravelsToParis(p, w) \u2192 HasWedding(p, w))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p, w)))\n\u2203w \u2203p (OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john, john_wedding) \u2227 \u00acHasWedding(john, john_wedding)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p, w)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: TravelsToParis/2, TravelsToParis/1.\n\n\nFatal error:  The following symbols are used with multiple arities: TravelsToParis/2, TravelsToParis/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_054cd825.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_054cd825.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_11f44c7f.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0010/post/solutions/sol_11f44c7f.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_138e5303.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_138e5303.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (OccursInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (OccursInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (OccursInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_15de3853.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_15de3853.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_15e3bbbf.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0003/post/solutions/sol_15e3bbbf.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200p \u2200w (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200p \u2200w (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200p \u2200w (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_21e27dca.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0001/post/solutions/sol_21e27dca.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_25497f67.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_25497f67.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_28e59158.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0006/post/solutions/sol_28e59158.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acHasChild(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acHasChild(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acHasChild(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_2c47a7f0.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_2c47a7f0.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_347149ac.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0003/post/solutions/sol_347149ac.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n# All people who have a wedding are people who have at least one child.\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\n# All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\n# All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (WeddingBelongsToPerson(w, p) \u2227 TravelsToParis(p)))\n\n# Some weddings in July are well-attended.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 WeddingBelongsToPerson(w, p))\n\n# If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p (IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\n# If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n# This is a bit ambiguous. Let's interpret it as:\n# If John has a wedding w that is well-attended, then (w is in July OR John travels to Paris).\n# The \"if not\" part seems to imply an alternative.\n# Let's try to break down the original statement:\n# \"If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\"\n# This can be interpreted as:\n# If John has a well-attended wedding w, then (w is in July) OR (if w is NOT in July, then John travels to Paris).\n# This is equivalent to:\n# If John has a well-attended wedding w, then (w is in July) OR (John travels to Paris).\n# Let's make a more direct interpretation of the phrasing:\n# If John has a well-attended wedding `w` and `w` belongs to John.\n# Then `w` occurs in July OR (if `w` does not occur in July, then John travels to Paris).\n# This is equivalent to: If John has a well-attended wedding `w`, then `w` occurs in July OR John travels to Paris.\n\u2200p \u2200w (IsJohn(p) \u2227 HasWedding(p) \u2227 WeddingBelongsToPerson(w, p) \u2227 WellAttended(w) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n# All people who have a wedding are people who have at least one child.\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\n# All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\n# All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (WeddingBelongsToPerson(w, p) \u2227 TravelsToParis(p)))\n\n# Some weddings in July are well-attended.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 WeddingBelongsToPerson(w, p))\n\n# If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p (IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\n# If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n# This is a bit ambiguous. Let's interpret it as:\n# If John has a wedding w that is well-attended, then (w is in July OR John travels to Paris).\n# The \"if not\" part seems to imply an alternative.\n# Let's try to break down the original statement:\n# \"If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\"\n# This can be interpreted as:\n# If John has a well-attended wedding w, then (w is in July) OR (if w is NOT in July, then John travels to Paris).\n# This is equivalent to:\n# If John has a well-attended wedding w, then (w is in July) OR (John travels to Paris).\n# Let's make a more direct interpretation of the phrasing:\n# If John has a well-attended wedding `w` and `w` belongs to John.\n# Then `w` occurs in July OR (if `w` does not occur in July, then John travels to Paris).\n# This is equivalent to: If John has a well-attended wedding `w`, then `w` occurs in July OR John travels to Paris.\n\u2200p \u2200w (IsJohn(p) \u2227 HasWedding(p) \u2227 WeddingBelongsToPerson(w, p) \u2227 WellAttended(w) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n# All people who have a wedding are people who have at least one child.\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\n# All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\n# All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (WeddingBelongsToPerson(w, p) \u2227 TravelsToParis(p)))\n\n# Some weddings in July are well-attended.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 WeddingBelongsToPerson(w, p))\n\n# If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p (IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\n# If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n# This is a bit ambiguous. Let's interpret it as:\n# If John has a wedding w that is well-attended, then (w is in July OR John travels to Paris).\n# The \"if not\" part seems to imply an alternative.\n# Let's try to break down the original statement:\n# \"If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\"\n# This can be interpreted as:\n# If John has a well-attended wedding w, then (w is in July) OR (if w is NOT in July, then John travels to Paris).\n# This is equivalent to:\n# If John has a well-attended wedding w, then (w is in July) OR (John travels to Paris).\n# Let's make a more direct interpretation of the phrasing:\n# If John has a well-attended wedding `w` and `w` belongs to John.\n# Then `w` occurs in July OR (if `w` does not occur in July, then John travels to Paris).\n# This is equivalent to: If John has a well-attended wedding `w`, then `w` occurs in July OR John travels to Paris.\n\u2200p \u2200w (IsJohn(p) \u2227 HasWedding(p) \u2227 WeddingBelongsToPerson(w, p) \u2227 WellAttended(w) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_3565d7e5.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_3565d7e5.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_3801c040.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0003/post/solutions/sol_3801c040.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 \u00acTravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 \u00acTravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 \u00acTravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_3ebb9fb5.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0006/post/solutions/sol_3ebb9fb5.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_4093ef9c.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0003/post/solutions/sol_4093ef9c.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_4342caff.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0007/post/solutions/sol_4342caff.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_4738d11a.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0010/post/solutions/sol_4738d11a.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 IsJohn(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_504102f4.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0006/post/solutions/sol_504102f4.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_51dd2626.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0010/post/solutions/sol_51dd2626.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_551a2ae4.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0001/post/solutions/sol_551a2ae4.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (\u2203w (HasWedding(p, w)) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 \u2203w (HasWedding(p, w))) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00ac\u2203w (HasWedding(john, w)) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2203w (HasWedding(john, w) \u2227 WellAttended(w)) \u2192 \u2203w_j (HasWedding(john, w_j) \u2227 WeddingInJuly(w_j)) \u2228 TravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200w (BelongsTo(w, john) \u2227 WeddingInJuly(w)) \u2192 WeddingInJuly(w) ::: Wedding in July belongs to John.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "'w_j' is an illegal variable name.  Constants may not be quantified.\nsome w.(((HasWedding(john, w)) & (WellAttended(w))) -> (some w_j.(((HasWedding(john, w_j)) & (WeddingInJuly(w_j))) | (TravelsToParis(john)))))\n                                                             ^",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (\u2203w (HasWedding(p, w)) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 \u2203w (HasWedding(p, w))) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00ac\u2203w (HasWedding(john, w)) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2203w (HasWedding(john, w) \u2227 WellAttended(w)) \u2192 \u2203w_j (HasWedding(john, w_j) \u2227 WeddingInJuly(w_j)) \u2228 TravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200w (BelongsTo(w, john) \u2227 WeddingInJuly(w)) \u2192 WeddingInJuly(w) ::: Wedding in July belongs to John.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "'w_j' is an illegal variable name.  Constants may not be quantified.\nsome w.(((HasWedding(john, w)) & (WellAttended(w))) -> (some w_j.(((HasWedding(john, w_j)) & (WeddingInJuly(w_j))) | (TravelsToParis(john)))))\n                                                             ^",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (\u2203w (HasWedding(p, w)) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 \u2203w (HasWedding(p, w))) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00ac\u2203w (HasWedding(john, w)) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2203w (HasWedding(john, w) \u2227 WellAttended(w)) \u2192 \u2203w_j (HasWedding(john, w_j) \u2227 WeddingInJuly(w_j)) \u2228 TravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200w (BelongsTo(w, john) \u2227 WeddingInJuly(w)) \u2192 WeddingInJuly(w) ::: Wedding in July belongs to John.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "'w_j' is an illegal variable name.  Constants may not be quantified.\nsome w.(((HasWedding(john, w)) & (WellAttended(w))) -> (some w_j.(((HasWedding(john, w_j)) & (WeddingInJuly(w_j))) | (TravelsToParis(john)))))\n                                                             ^",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_640da5b4.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_640da5b4.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (WeddingInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (WeddingInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (WeddingInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_68805011.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_68805011.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w \u2203p (WeddingInJuly(w) \u2227 BelongsTo(w, p) \u2192 TravelsToParis(p))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200w \u2203p (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w \u2203p (WeddingInJuly(w) \u2227 BelongsTo(w, p) \u2192 TravelsToParis(p))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200w \u2203p (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w \u2203p (WeddingInJuly(w) \u2227 BelongsTo(w, p) \u2192 TravelsToParis(p))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\u2200w (WeddingInJuly(w) \u2192 Wedding(w))\n\u2200w \u2203p (BelongsTo(w, p) \u2192 (Wedding(w) \u2227 Person(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_68dd6f97.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0002/post/solutions/sol_68dd6f97.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p))\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (OccursInJuly(w) \u2192 \u2203p (BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_6d334aa1.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_6d334aa1.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200y (OccursInJuly(y) \u2192 \u2203x (Person(x) \u2227 BelongsTo(y, x) \u2227 TravelsToParis(x))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203y \u2203x (WeddingInJuly(y) \u2227 WellAttended(y) \u2227 BelongsTo(y, x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200y (OccursInJuly(y) \u2192 \u2203x (Person(x) \u2227 BelongsTo(y, x) \u2227 TravelsToParis(x))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203y \u2203x (WeddingInJuly(y) \u2227 WellAttended(y) \u2227 BelongsTo(y, x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200y (OccursInJuly(y) \u2192 \u2203x (Person(x) \u2227 BelongsTo(y, x) \u2227 TravelsToParis(x))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203y \u2203x (WeddingInJuly(y) \u2227 WellAttended(y) \u2227 BelongsTo(y, x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_71db8bc4.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_71db8bc4.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_766cb052.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_766cb052.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 Wedding(p))\n\u2200p (Person(p) \u2227 WeddingInJuly(p) \u2192 OccursInJuly(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_7bb7fb51.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0009/post/solutions/sol_7bb7fb51.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_7e29b801.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0002/post/solutions/sol_7e29b801.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p \u2200w ((Person(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (OccursInJuly(w) \u2228 \u00acTravelsToParis(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_84f1c5a3.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_84f1c5a3.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_8bc61850.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0010/post/solutions/sol_8bc61850.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_8d66f311.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0008/post/solutions/sol_8d66f311.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_91df3073.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0002/post/solutions/sol_91df3073.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w \u2200p ((Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) \u2192 (OccursInJuly(w) \u2228 TravelsToParis(p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\nJohn(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_94b2ff4a.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0001/post/solutions/sol_94b2ff4a.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200x (Wedding(x) \u2227 OccursInJuly(x) \u2192 TravelsToParis(Owner(x)))\n\u2203x (Wedding(x) \u2227 OccursInJuly(x) \u2227 WellAttended(x))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200x \u2200y ((Person(x) \u2227 Wedding(y) \u2227 BelongsTo(y, x) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 TravelsToParis(x)))\n\u2200x \u2200y (Wedding(y) \u2227 OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 Person(x))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200x (Wedding(x) \u2227 OccursInJuly(x) \u2192 TravelsToParis(Owner(x)))\n\u2203x (Wedding(x) \u2227 OccursInJuly(x) \u2227 WellAttended(x))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200x \u2200y ((Person(x) \u2227 Wedding(y) \u2227 BelongsTo(y, x) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 TravelsToParis(x)))\n\u2200x \u2200y (Wedding(y) \u2227 OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 Person(x))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200x (Wedding(x) \u2227 OccursInJuly(x) \u2192 TravelsToParis(Owner(x)))\n\u2203x (Wedding(x) \u2227 OccursInJuly(x) \u2227 WellAttended(x))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200x \u2200y ((Person(x) \u2227 Wedding(y) \u2227 BelongsTo(y, x) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 TravelsToParis(x)))\n\u2200x \u2200y (Wedding(y) \u2227 OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 Person(x))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_95fba049.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_95fba049.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_96d6b2c3.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_96d6b2c3.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (OccursInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_99a0de81.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0001/post/solutions/sol_99a0de81.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w \u2203p (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p))\n\u2200p (John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200p \u2200w (John(p) \u2227 HasWedding(p, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_a48cf5a2.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_a48cf5a2.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (OccursInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\u2200x \u2200y (OccursInJuly(y) \u2227 BelongsTo(y, x) \u2192 WeddingInJuly(y)) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_a6ed95b9.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_a6ed95b9.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_a825e2ee.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0003/post/solutions/sol_a825e2ee.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2227 OccursInJuly(w)) \u2228 (\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john)) \u2192 TravelsToParis(john))\nBelongsTo(w, john) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "False",
          "error_message": "",
          "predicted_answer": "B",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2227 OccursInJuly(w)) \u2228 (\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john)) \u2192 TravelsToParis(john))\nBelongsTo(w, john) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2227 OccursInJuly(w)) \u2228 (\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john)) \u2192 TravelsToParis(john))\nBelongsTo(w, john) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_a897a1e6.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0007/post/solutions/sol_a897a1e6.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_b2522d7d.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0002/post/solutions/sol_b2522d7d.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200x (Person(x) \u2227 HasChild(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2227 WellAttended(x) \u2192 OccursInJuly(x) \u2228 TravelsToParis(x))\n\u2200x (Person(x) \u2227 John(x) \u2227 HasWedding(x, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200x (Person(x) \u2227 HasChild(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2227 WellAttended(x) \u2192 OccursInJuly(x) \u2228 TravelsToParis(x))\n\u2200x (Person(x) \u2227 John(x) \u2227 HasWedding(x, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200x (Person(x) \u2227 HasChild(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 \u00acTravelsToParis(x))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2227 WellAttended(x) \u2192 OccursInJuly(x) \u2228 TravelsToParis(x))\n\u2200x (Person(x) \u2227 John(x) \u2227 HasWedding(x, w) \u2227 WellAttended(w) \u2192 OccursInJuly(w) \u2228 TravelsToParis(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 John(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_b64f8a3d.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0007/post/solutions/sol_b64f8a3d.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 WeddingInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_b7b2ee03.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0009/post/solutions/sol_b7b2ee03.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_bca042db.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0009/post/solutions/sol_bca042db.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_bdfa6996.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_bdfa6996.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_bf74053c.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0004/post/solutions/sol_bf74053c.sol.fol",
      "correct": 1,
      "total": 3,
      "accuracy": 0.3333333333333333,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, john) \u2192 WeddingInJuly(w))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, john) \u2192 WeddingInJuly(w))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, john) \u2192 WeddingInJuly(w))\n\u2200x (Person(x) \u2227 HasWedding(x) \u2192 HasChild(x))\n\u2200x (Person(x) \u2227 TravelsToParis(x) \u2192 HasWedding(x))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_c36723a7.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0007/post/solutions/sol_c36723a7.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 WeddingInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_c46a598f.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0002/post/solutions/sol_c46a598f.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nJohnHasChild \u2192 \u00acJohnTravelsToParis \u2227 \u00acJohnHasWedding\n(JohnHasWedding \u2227 JohnWeddingWellAttended) \u2192 (JohnWeddingInJuly \u2228 \u00acJohnTravelsToParis)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nJohnHasChild \u2192 \u00acJohnTravelsToParis \u2227 \u00acJohnHasWedding\n(JohnHasWedding \u2227 JohnWeddingWellAttended) \u2192 (JohnWeddingInJuly \u2228 \u00acJohnTravelsToParis)\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (WeddingInJuly(w) \u2227 WellAttended(w))\nJohnHasChild \u2192 \u00acJohnTravelsToParis \u2227 \u00acJohnHasWedding\n(JohnHasWedding \u2227 JohnWeddingWellAttended) \u2192 (JohnWeddingInJuly \u2228 \u00acJohnTravelsToParis)\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "EXCEPTION: RuntimeError(None)",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_c5b14d4b.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0007/post/solutions/sol_c5b14d4b.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 \u2203p (Person(p) \u2227 BelongsTo(w, p)) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_d10db113.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_d10db113.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (WeddingInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (WeddingInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200x \u2200y ((HasWedding(x, y) \u2227 WellAttended(y)) \u2192 (WeddingInJuly(y) \u2228 \u00acTravelsToParis(x))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_d10efae9.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0006/post/solutions/sol_d10efae9.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_d396a25c.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0005/post/solutions/sol_d396a25c.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john) \u2192 OccursInJuly(w) \u2228 TravelsToParis(john))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_df79a56b.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0009/post/solutions/sol_df79a56b.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 WeddingInJuly(w))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_e9159e7c.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0008/post/solutions/sol_e9159e7c.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acHasWedding(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200w \u2200p (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p) \u2227 John(p) \u2192 OccursInJuly(w) \u2228 TravelsToParis(p))\n\u2200p (John(p) \u2192 (HasChild(p) \u2192 \u00acTravelsToParis(p) \u2227 \u00acHasWedding(p)))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_edbef186.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_edbef186.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (WeddingInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (WeddingInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (HasWedding(p) \u2192 HasChild(p)) ::: All people who have a wedding are people who have at least one child.\n\u2200p (TravelsToParis(p) \u2192 HasWedding(p)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200w (WeddingInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p))) ::: All weddings that occur in July belong to people who travel to Paris for their honeymoon.\n\u2203w \u2203p (WeddingInJuly(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, p)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\n\u2200p \u2200w ((HasWedding(p, w) \u2227 WellAttended(w)) \u2192 (WeddingInJuly(w) \u2228 \u00acTravelsToParis(p))) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": null,
          "error_message": "(FATAL)\n%%ERROR: The following symbols are used with multiple arities: HasWedding/2, HasWedding/1.\n\n\nFatal error:  The following symbols are used with multiple arities: HasWedding/2, HasWedding/1",
          "predicted_answer": "D",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_f1736577.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0006/post/solutions/sol_f1736577.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 (TravelsToParis(p) \u2228 \u2203w (Wedding(w) \u2227 BelongsTo(w, p)))))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 (TravelsToParis(p) \u2228 \u2203w (Wedding(w) \u2227 BelongsTo(w, p)))))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\n\u2200p (Person(p) \u2227 John(p) \u2192 Person(p))\n\u2200p (Person(p) \u2227 John(p) \u2192 \u00ac(HasChild(p) \u2227 (TravelsToParis(p) \u2228 \u2203w (Wedding(w) \u2227 BelongsTo(w, p)))))\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    },
    {
      "solution_name": "sol_f5f67770.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/initial/solutions/sol_f5f67770.sol.fol",
      "correct": 0,
      "total": 3,
      "accuracy": 0.0,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nHasWedding(john) \u2227 WellAttended(wedding) \u2192 OccursInJuly(wedding) \u2228 \u00acTravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\nBelongsTo(wedding, john) \u2227 OccursInJuly(wedding) \u2192 WeddingInJuly(wedding) ::: Wedding in July belongs to John.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nHasWedding(john) \u2227 WellAttended(wedding) \u2192 OccursInJuly(wedding) \u2228 \u00acTravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\nBelongsTo(wedding, john) \u2227 OccursInJuly(wedding) \u2192 WeddingInJuly(wedding) ::: Wedding in July belongs to John.\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200x (HasWedding(x) \u2192 HasChild(x)) ::: All people who have a wedding are people who have at least one child.\n\u2200x (TravelsToParis(x) \u2192 HasWedding(x)) ::: All people who travel to Paris for their honeymoon are people who have a wedding.\n\u2200x (WeddingInJuly(x) \u2192 TravelsToParis(x)) ::: All weddings that occur in July are people who travel to Paris for their honeymoon.\n\u2203x (WeddingInJuly(x) \u2227 WellAttended(x)) ::: Some weddings in July are well-attended.\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john) ::: If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nHasWedding(john) \u2227 WellAttended(wedding) \u2192 OccursInJuly(wedding) \u2228 \u00acTravelsToParis(john) ::: If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.\nBelongsTo(wedding, john) \u2227 OccursInJuly(wedding) \u2192 WeddingInJuly(wedding) ::: Wedding in July belongs to John.\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "Unknown",
          "error_message": "",
          "predicted_answer": "C",
          "is_correct": false
        }
      ]
    },
    {
      "solution_name": "sol_fdd6e087.sol.fol",
      "solution_path": "/vol/bitbucket/mo1024/B_MASTER_RUN_DIR/run_1/benchmark_runs/with_crossover_with_mutation_no_diversity_no_syntax_repairs_no_validation/FOLIO_dev_129/run_20250904T193549Z_e2d458/run_20250904T203549_87f478/evo_gen_0010/post/solutions/sol_fdd6e087.sol.fol",
      "correct": 2,
      "total": 3,
      "accuracy": 0.6666666666666666,
      "question_results": [
        {
          "question_id": "FOLIO_dev_129",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a wedding that is well-attended.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 BelongsTo(w, john) \u2227 WellAttended(w)))\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        },
        {
          "question_id": "FOLIO_dev_130",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has at least one child.",
          "expected_answer": "C",
          "generated_fol_conclusion": "HasChild(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\nHasChild(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": false
        },
        {
          "question_id": "FOLIO_dev_131",
          "context": "All people who have a wedding are people who have at least one child. All people who travel to Paris for their honeymoon are people who have a wedding. All weddings that occur in July belong to people who travel to Paris for their honeymoon. Some weddings in July are well-attended. If John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding. If John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon.",
          "question": "Based on the above information, is the following statement true, false, or uncertain? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
          "expected_answer": "A",
          "generated_fol_conclusion": "\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)",
          "combined_program": "set(auto).\nassign(max_seconds, 5).\nassign(max_mem, 1024).\n# Predicates:\nHasWedding(x) ::: x has a wedding.\nHasChild(x) ::: x has at least one child.\nTravelsToParis(x) ::: x travels to Paris for their honeymoon.\nWeddingInJuly(x) ::: x is a wedding that occurs in July.\nWellAttended(x) ::: x is well-attended.\nPerson(x) ::: x is a person.\nWedding(x) ::: x is a wedding.\nBelongsTo(x, y) ::: x belongs to y.\nJohn(x) ::: x is John.\nHasWedding(x, y) ::: x has wedding y.\nOccursInJuly(y) ::: wedding y occurs in July.\n\n# Premises:\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 HasChild(p))\n\u2200p (Person(p) \u2227 TravelsToParis(p) \u2192 HasWedding(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p) \u2227 TravelsToParis(p)))\n\u2203w (Wedding(w) \u2227 OccursInJuly(w) \u2227 WellAttended(w))\n\u2200p (Person(p) \u2227 HasChild(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2192 \u00acTravelsToParis(p))\n\u2200p (Person(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2192 \u2203p (Person(p) \u2227 BelongsTo(w, p)))\n\u2200w (Wedding(w) \u2227 OccursInJuly(w) \u2227 BelongsTo(w, p) \u2192 WeddingInJuly(w))\nHasChild(john) \u2192 \u00acTravelsToParis(john) \u2227 \u00acHasWedding(john)\n\u2200p (Person(p) \u2227 John(p) \u2227 HasWedding(p) \u2227 WellAttended(p) \u2192 OccursInJuly(p) \u2228 TravelsToParis(p))\n\n# Conclusion:\n\u00ac(\u2203w (Wedding(w) \u2227 WellAttended(w) \u2227 BelongsTo(w, john))) \u2227 \u00acTravelsToParis(john)\n",
          "prover9_answer": "True",
          "error_message": "",
          "predicted_answer": "A",
          "is_correct": true
        }
      ]
    }
  ],
  "summary": {
    "pick_mode": "prefer_correct",
    "require_vocab_match": false,
    "conclusions_source": "/vol/bitbucket/mo1024/A_MASTER_RUN_DIR/run_1/benchmark_questions/with_crossover_with_mutation_no_diversity_with_both_syntax_no_validation",
    "total_correct": 69,
    "total_questions": 174,
    "overall_accuracy": 0.39655172413793105
  }
}